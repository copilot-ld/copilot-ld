#
# Networking and Volumes
#

networks:
  external:
    driver: bridge
    name: copilot-ld.external
  internal:
    driver: bridge
    name: copilot-ld.internal

volumes:
  minio_data:
    driver: local

#
# Services
#

services:
  #
  # Infrastructure Services
  #

  alb:
    image: nginx:alpine
    container_name: copilot-ld.alb
    env_file: ./config/.env
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./infrastructure/docker/alb/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./infrastructure/docker/alb/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./infrastructure/docker/alb/proxy_params:/etc/nginx/proxy_params:ro
      - ./data/cert/localhost.crt:/etc/ssl/certs/localhost.crt:ro
      - ./data/cert/localhost.key:/etc/ssl/private/localhost.key:ro
    networks:
      - external
    depends_on:
      - web
      - copilot

  minio:
    image: minio/minio:latest
    container_name: copilot-ld.minio
    env_file: ./config/.env
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - external # Needs to be available to the host for administrative tasks
      - internal

  base:
    build:
      context: .
      dockerfile: ./Dockerfile.base
    image: copilot-ld/base:latest
    container_name: copilot-ld.base
    deploy:
      replicas: 0

  #
  # Extension Services
  #

  web:
    build:
      context: .
      dockerfile: ./extensions/web/Dockerfile
    image: copilot-ld/web:latest
    container_name: copilot-ld.web
    env_file: ./config/.env
    volumes:
      - ./generated:/app/generated:ro
    networks:
      - external
      - internal
    depends_on:
      - base
      - agent

  copilot:
    build:
      context: .
      dockerfile: ./extensions/copilot/Dockerfile
    image: copilot-ld/copilot:latest
    container_name: copilot-ld.copilot
    env_file: ./config/.env
    volumes:
      - ./generated:/app/generated:ro
    networks:
      - external
      - internal
    depends_on:
      - base
      - agent

  #
  # Core Services
  #

  agent:
    build:
      context: .
      dockerfile: ./services/agent/Dockerfile
    image: copilot-ld/agent:latest
    container_name: copilot-ld.agent
    env_file: ./config/.env
    volumes:
      - ./generated:/app/generated:ro
      - ./data/storage/policies:/app/data/storage/policies
      - ./data/storage/resources:/app/data/storage/resources
    networks:
      - internal
    depends_on:
      - base
      - memory
      - llm
      - vector
      - tool

  llm:
    build:
      context: .
      dockerfile: ./services/llm/Dockerfile
    image: copilot-ld/llm:latest
    container_name: copilot-ld.llm
    env_file: ./config/.env
    volumes:
      - ./generated:/app/generated:ro
    networks:
      - internal
    depends_on:
      - base

  vector:
    build:
      context: .
      dockerfile: ./services/vector/Dockerfile
    image: copilot-ld/vector:latest
    container_name: copilot-ld.vector
    env_file: ./config/.env
    networks:
      - internal
    volumes:
      - ./generated:/app/generated:ro
      - ./data/storage/vectors:/app/data/storage/vectors
    depends_on:
      - base

  memory:
    build:
      context: .
      dockerfile: ./services/memory/Dockerfile
    image: copilot-ld/memory:latest
    container_name: copilot-ld.memory
    env_file: ./config/.env
    networks:
      - internal
    volumes:
      - ./generated:/app/generated:ro
      - ./data/storage/memories:/app/data/storage/memories
      - ./data/storage/policies:/app/data/storage/policies
      - ./data/storage/resources:/app/data/storage/resources
    depends_on:
      - base

  tool:
    build:
      context: .
      dockerfile: ./services/tool/Dockerfile
    image: copilot-ld/tool:latest
    container_name: copilot-ld.tool
    env_file: ./config/.env
    volumes:
      - ./generated:/app/generated:ro
    networks:
      - internal
    depends_on:
      - base

  #
  # Example Tool Services
  #

  hash:
    build:
      context: .
      dockerfile: ./tools/hash/Dockerfile
      args:
        GITHUB_TOKEN: ${GITHUB_TOKEN}
    image: copilot-ld/hash:latest
    container_name: copilot-ld.hash
    env_file: ./config/.env
    volumes:
      - ./generated:/app/generated:ro
    networks:
      - internal
    depends_on:
      - base
