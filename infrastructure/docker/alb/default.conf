server {
    listen 80;
    server_name localhost;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl;
    http2 on;
    server_name localhost;

    # SSL Configuration
    ssl_certificate /etc/ssl/certs/localhost.crt;
    ssl_certificate_key /etc/ssl/private/localhost.key;
    
    # AWS ALB-compatible SSL configuration (ELBSecurityPolicy-TLS-1-2-Ext-2018-06)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:AES128-GCM-SHA256:AES128-SHA256:AES256-GCM-SHA384:AES256-SHA256;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 5m;

    # ALB-like performance settings
    client_max_body_size 64m;
    client_body_buffer_size 16k;
    client_header_buffer_size 8k;
    large_client_header_buffers 4 16k;
    
    # Connection limits (ALB-style)
    keepalive_timeout 60s;
    keepalive_requests 100;
    
    # Gzip compression (ALB default)
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Web extension (path: /web)
    location /web {
        # Rate limiting (ALB-style)
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://web:3000;
        include /etc/nginx/proxy_params;
    }

    # Copilot extension (path: /copilot)
    location /copilot {
        # Rate limiting (ALB-style)
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://copilot:3000;
        include /etc/nginx/proxy_params;
    }

    # Default location - redirect to web extension
    location / {
        return 301 https://$server_name/web$request_uri;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}