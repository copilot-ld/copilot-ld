name: Demo Deployment of Extensions

on:
  workflow_dispatch:
    inputs:
      environment_name:
        description: "Environment name prefix for resources"
        required: true
        default: "demo"
        type: string

jobs:
  deploy-extensions:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.DEMO_AWS_DEPLOY_ROLE_ARN }}
          aws-region: us-east-1

      - name: Outputs
        id: stack-outputs
        run: |
          NETWORK_STACK_NAME="${{ inputs.environment_name }}-cld-network-stack-cf"
          SECRETS_STACK_NAME="${{ inputs.environment_name }}-cld-secrets-stack-cf"
          DATA_STACK_NAME="${{ inputs.environment_name }}-cld-data-stack-cf"

          echo "vpc_id=$(aws cloudformation describe-stacks \
            --stack-name $NETWORK_STACK_NAME \
            --query 'Stacks[0].Outputs[?OutputKey==`VpcId`].OutputValue' \
            --output text \
            --region us-east-1)" >> $GITHUB_OUTPUT

          echo "private_subnet_ids=$(aws cloudformation describe-stacks \
            --stack-name $NETWORK_STACK_NAME \
            --query 'Stacks[0].Outputs[?OutputKey==`PrivateSubnetIds`].OutputValue' \
            --output text \
            --region us-east-1)" >> $GITHUB_OUTPUT

          echo "service_security_group_id=$(aws cloudformation describe-stacks \
            --stack-name $NETWORK_STACK_NAME \
            --query 'Stacks[0].Outputs[?OutputKey==`ServiceSecurityGroupId`].OutputValue' \
            --output text \
            --region us-east-1)" >> $GITHUB_OUTPUT

          echo "alb_listener_arn=$(aws cloudformation describe-stacks \
            --stack-name $NETWORK_STACK_NAME \
            --query 'Stacks[0].Outputs[?OutputKey==`ALBListenerArn`].OutputValue' \
            --output text \
            --region us-east-1)" >> $GITHUB_OUTPUT

          echo "service_discovery_namespace_id=$(aws cloudformation describe-stacks \
            --stack-name $NETWORK_STACK_NAME \
            --query 'Stacks[0].Outputs[?OutputKey==`ServiceDiscoveryNamespaceId`].OutputValue' \
            --output text \
            --region us-east-1)" >> $GITHUB_OUTPUT

          echo "alb_dns_name=$(aws cloudformation describe-stacks \
            --stack-name $NETWORK_STACK_NAME \
            --query 'Stacks[0].Outputs[?OutputKey==`ApplicationLoadBalancerDNSName`].OutputValue' \
            --output text \
            --region us-east-1)" >> $GITHUB_OUTPUT

          echo "github_token_arn=$(aws cloudformation describe-stacks \
            --stack-name $SECRETS_STACK_NAME \
            --query 'Stacks[0].Outputs[?OutputKey==`GitHubTokenArn`].OutputValue' \
            --output text \
            --region us-east-1)" >> $GITHUB_OUTPUT

          echo "service_secret_arn=$(aws cloudformation describe-stacks \
            --stack-name $SECRETS_STACK_NAME \
            --query 'Stacks[0].Outputs[?OutputKey==`ServiceSecretArn`].OutputValue' \
            --output text \
            --region us-east-1)" >> $GITHUB_OUTPUT

          echo "secrets_role_arn=$(aws cloudformation describe-stacks \
            --stack-name $SECRETS_STACK_NAME \
            --query 'Stacks[0].Outputs[?OutputKey==`SecretsRoleArn`].OutputValue' \
            --output text \
            --region us-east-1)" >> $GITHUB_OUTPUT

          echo "bucket_name=$(aws cloudformation describe-stacks \
            --stack-name $DATA_STACK_NAME \
            --query 'Stacks[0].Outputs[?OutputKey==`BucketName`].OutputValue' \
            --output text \
            --region us-east-1)" >> $GITHUB_OUTPUT

          echo "bucket_role_arn=$(aws cloudformation describe-stacks \
            --stack-name $DATA_STACK_NAME \
            --query 'Stacks[0].Outputs[?OutputKey==`BucketRoleArn`].OutputValue' \
            --output text \
            --region us-east-1)" >> $GITHUB_OUTPUT

      - name: Deploy
        id: deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: "${{ inputs.environment_name }}-cld-extensions-stack-cf"
          template: infrastructure/cloudformation/extensions.yml
          parameter-overrides: |
            EnvironmentName=${{ inputs.environment_name }}
            VpcId=${{ steps.stack-outputs.outputs.vpc_id }}
            PrivateSubnetIds=${{ steps.stack-outputs.outputs.private_subnet_ids }}
            ServiceSecurityGroupId=${{ steps.stack-outputs.outputs.service_security_group_id }}
            ALBListenerArn=${{ steps.stack-outputs.outputs.alb_listener_arn }}
            ServiceDiscoveryNamespaceId=${{ steps.stack-outputs.outputs.service_discovery_namespace_id }}
            ContainerTag=latest
            GitHubTokenArn=${{ steps.stack-outputs.outputs.github_token_arn }}
            ServiceSecretArn=${{ steps.stack-outputs.outputs.service_secret_arn }}
            BucketName=${{ steps.stack-outputs.outputs.bucket_name }}
            BucketRoleArn=${{ steps.stack-outputs.outputs.bucket_role_arn }}
            SecretsRoleArn=${{ steps.stack-outputs.outputs.secrets_role_arn }}
          capabilities: CAPABILITY_IAM

      - name: Set stack name output
        run: |
          echo "stack_name=${{ inputs.environment_name }}-cld-extensions-stack-cf" >> $GITHUB_OUTPUT

      - name: Display ALB URL
        run: |
          echo "ALB URL: http://${{ steps.stack-outputs.outputs.alb_dns_name }}"
