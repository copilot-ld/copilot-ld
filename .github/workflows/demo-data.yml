name: Demo Deployment of Data

on:
  workflow_dispatch:
    inputs:
      aws_region:
        description: "AWS region for deployment"
        required: true
        default: "us-east-1"
        type: string
      stack_name:
        description: "CloudFormation stack name"
        required: true
        default: "copilot-ld-demo-data"
        type: string

jobs:
  process-data:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js and install dependencies
        uses: ./.github/actions/setup-node

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.DEMO_AWS_DEPLOY_ROLE_ARN }}
          aws-region: ${{ inputs.aws_region }}

      - name: Deploy data infrastructure
        run: |
          aws cloudformation deploy \
            --template-file infrastructure/cloudformation/data.yml \
            --stack-name ${{ inputs.stack_name }} \
            --capabilities CAPABILITY_IAM \
            --region ${{ inputs.aws_region }}

      - name: Get bucket name
        id: bucket
        run: |
          S3_BUCKET_NAME=$(aws cloudformation describe-stacks \
            --stack-name ${{ inputs.stack_name }} \
            --query "Stacks[0].Outputs[?OutputKey=='BucketName'].OutputValue" \
            --output text \
            --region ${{ inputs.aws_region }})
          S3_BUCKET_ROLE_ARN=$(aws cloudformation describe-stacks \
            --stack-name ${{ inputs.stack_name }} \
            --query "Stacks[0].Outputs[?OutputKey=='BucketRoleArn'].OutputValue" \
            --output text \
            --region ${{ inputs.aws_region }})

          echo "s3_bucket_name=$S3_BUCKET_NAME" >> $GITHUB_OUTPUT
          echo "s3_bucket_role_arn=$S3_BUCKET_ROLE_ARN" >> $GITHUB_OUTPUT

      - name: Process knowledge data
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          S3_BUCKET_NAME: ${{ steps.bucket.outputs.s3_bucket_name }}
          S3_BUCKET_ROLE_ARN: ${{ steps.bucket.outputs.s3_bucket_role_arn }}

        run: |
          set -e

          # Prepare configuration and data directories
          cp ./config/config{.example,}.yml
          cp ./config/assistants{.example,}.yml
          mkdir -p ./data/{memories,policies,resources,vectors}

          # Copy the example knowledge base
          cp -r ./examples/knowledge data/

          # Copy the example tools and re-generate code
          cp -r ./examples/tools/* tools/
          npm run codegen

          # Process resources, tools, and vectors
          DEBUG=* node ./scripts/resources.js
          DEBUG=* node ./scripts/tools.js
          DEBUG=* node ./scripts/vectors.js

          # Upload all data using the upload utility
          npx --workspace=@copilot-ld/libutil upload

          echo "âœ… Data processing completed"
