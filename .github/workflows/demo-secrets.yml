name: Demo Deployment of Secrets

on:
  workflow_dispatch:
    inputs:
      environment_name:
        description: "Environment name prefix for resources"
        required: true
        default: "demo"
        type: string
      aws_region:
        description: "AWS region for deployment"
        required: true
        default: "us-east-1"
        type: string

jobs:
  deploy-secrets:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js and dependencies
        uses: ./.github/actions/setup-node

      - name: Generate service auth secret
        id: generate-secret
        run: |
          # Generate service auth secret using the script
          SERVICE_SECRET=$(node scripts/secret.js --stdout)
          echo "service_secret=$SERVICE_SECRET" >> $GITHUB_OUTPUT

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.DEMO_AWS_DEPLOY_ROLE_ARN }}
          aws-region: ${{ inputs.aws_region }}

      - name: Deploy secrets stack
        run: |
          STACK_NAME="${{ inputs.environment_name }}-cld-secrets-stack-cf"
          aws cloudformation deploy \
            --template-file infrastructure/cloudformation/secrets.yml \
            --stack-name $STACK_NAME \
            --parameter-overrides \
              EnvironmentName=${{ inputs.environment_name }} \
              GitHubTokenValue=${{ secrets.DEMO_GITHUB_TOKEN }} \
              ServiceSecretValue=${{ steps.generate-secret.outputs.service_secret }} \
            --capabilities CAPABILITY_IAM \
            --region ${{ inputs.aws_region }}

      - name: Get stack outputs
        id: stack-outputs
        run: |
          STACK_NAME="${{ inputs.environment_name }}-cld-secrets-stack-cf"
          GITHUB_TOKEN_ARN=$(aws cloudformation describe-stacks \
            --stack-name $STACK_NAME \
            --query 'Stacks[0].Outputs[?OutputKey==`GitHubTokenArn`].OutputValue' \
            --output text \
            --region ${{ inputs.aws_region }})

          SERVICE_SECRET_ARN=$(aws cloudformation describe-stacks \
            --stack-name $STACK_NAME \
            --query 'Stacks[0].Outputs[?OutputKey==`ServiceSecretArn`].OutputValue' \
            --output text \
            --region ${{ inputs.aws_region }})

          echo "github_token_arn=$GITHUB_TOKEN_ARN" >> $GITHUB_OUTPUT
          echo "service_secret_arn=$SERVICE_SECRET_ARN" >> $GITHUB_OUTPUT
          echo "stack_name=$STACK_NAME" >> $GITHUB_OUTPUT

      - name: Display deployment summary
        run: |
          echo "âœ… Copilot-LD Demo: Secrets Infrastructure Deployed (Step 2/5)"
          echo ""
          echo "Stack: ${{ steps.stack-outputs.outputs.stack_name }}"
          echo "Region: ${{ inputs.aws_region }}"
          echo ""
          echo "Secret Resources:"
          echo "  GitHub Token ARN: ${{ steps.stack-outputs.outputs.github_token_arn }}"
          echo "  Service Secret ARN: ${{ steps.stack-outputs.outputs.service_secret_arn }}"
          echo ""
          echo "Next Steps:"
          echo "  1. Generate demo data: demo-data.yml"
          echo "  2. Deploy storage: demo-storage.yml" 
          echo "  3. Upload data: demo-upload.yml"
